/*
Full Prompt:
Create a complete HTML5 page named sticky-header.html with a sticky navigation header that remains fixed to the top of the viewport as the user scrolls. The header should contain a branding element on the left (such as a site name or logo), and a simple navigation menu on the right with links to at least three in-page sections. If you include a dropdown menu in the header (optional), make sure it is fully visible and not clipped by overflow issuesâ€”use position: absolute for the dropdown and ensure no parent container has overflow: hidden or overflow: auto that could cut it off. Below the header, add at least three scrollable content sections (e.g., full-screen-height) to demonstrate sticky behavior. Style everything using an external CSS file located at css/sticky-header.css. Write neurotically detailed comments in all files; explain every tag, class, style rule, and color value as if you're walking a complete beginner through the reasoning behind each choice. Be sure to include named comments describing your color scheme and interaction behavior. Include this full prompt as a comment at the top of the HTML file. Use placeholder content about an art topic of your choice to complete the page.
*/

/*
Color Scheme:
- Primary Background: #F8F8F8 (Very light gray, almost white) - Provides a clean, neutral canvas for content.
- Header Background: #333333 (Dark charcoal gray) - A strong, contrasting color for the fixed header, providing visual weight.
- Text Color: #333333 (Dark charcoal gray) - Good readability against light backgrounds.
- Link/Accent Color: #FF7F50 (Coral) - A vibrant, warm color for interactive elements and highlights.
- Dropdown Background: #444444 (Slightly lighter dark gray) - A subtle variation for the dropdown menu.
- Dropdown Link Hover: #FF9966 (Lighter coral) - A softer version of the accent color for hover states.
- Section Backgrounds:
    - #F0F0F0 (Light gray)
    - #E8E8E8 (Slightly darker light gray)
    - #E0E0E0 (Even darker light gray)
    - These provide subtle visual separation between sections without being distracting.
*/

/*
Interaction Behavior:
- Sticky Header: The header uses `position: fixed` to stay at the top of the viewport as the user scrolls.
- Navigation Links: When clicked, they smoothly (though HTML anchors are instant, CSS scroll-behavior could make it smooth) jump to their corresponding content sections.
- Dropdown Menu: The dropdown menu appears when the user hovers over the "Explore More" link. It uses `position: absolute` to ensure it overlays content and is not clipped.
- Link Hover Effects: Navigation links and dropdown links change color slightly on hover, providing visual feedback to the user that they are interactive.
*/

/* Universal Box-Sizing */
*, *::before, *::after {
    /*
    The universal selector `*` targets all elements. `*::before` and `*::after` target pseudo-elements.
    `box-sizing: border-box;` is a fundamental CSS rule for consistent layout.
    It changes how the total width and height of an element are calculated.
    Normally, `width` and `height` only apply to the content area, and padding and border are added on top.
    With `border-box`, padding and border are *included* within the specified `width` and `height`.
    This makes layout calculations much more intuitive and prevents elements from unexpectedly growing
    when padding or borders are added.
    */
    box-sizing: border-box;
    /*
    `scroll-behavior: smooth;` is a CSS property that makes scrolling to anchor links
    (like those in our navigation) animate smoothly rather than jumping instantly.
    This enhances the user experience by providing a visual transition.
    */
    scroll-behavior: smooth;
}

/* Body Styles */
body {
    /*
    The `body` selector targets the entire content area of the HTML document.
    */
    font-family: 'Inter', sans-serif;
    /*
    `font-family` specifies the typeface for text. 'Inter' is a modern, highly readable font.
    `sans-serif` is a generic fallback font, meaning if 'Inter' isn't available, the browser
    will use a default sans-serif font (e.g., Arial, Helvetica).
    */
    margin: 0;
    /*
    `margin: 0;` removes the default margin browsers apply to the body element.
    This ensures the content starts directly at the edge of the viewport.
    */
    padding: 0;
    /*
    `padding: 0;` removes any default padding from the body.
    */
    background-color: #F8F8F8; /* Primary Background: Very light gray */
    /*
    `background-color` sets the background color of the body. #F8F8F8 is a very light gray,
    providing a clean and neutral base for the page content.
    */
    color: #333333; /* Text Color: Dark charcoal gray */
    /*
    `color` sets the default text color for the entire page. #333333 is a dark charcoal gray,
    offering good contrast and readability against the light background.
    */
    line-height: 1.6;
    /*
    `line-height` sets the height of each line of text. A value of 1.6 (160% of the font size)
    improves readability by providing adequate space between lines.
    */
}

/* Main Header Styles */
.main-header {
    /*
    The `.main-header` class targets the <header> element.
    */
    position: fixed;
    /*
    `position: fixed;` is the key property for creating a sticky header.
    It removes the element from the normal document flow and positions it relative to the viewport.
    This means it will stay in the same place on the screen even when the user scrolls.
    */
    top: 0;
    /*
    `top: 0;` positions the fixed header at the very top edge of the viewport.
    */
    left: 0;
    /*
    `left: 0;` positions the fixed header at the very left edge of the viewport.
    */
    width: 100%;
    /*
    `width: 100%;` ensures the header spans the full width of the viewport.
    */
    background-color: #333333; /* Header Background: Dark charcoal gray */
    /*
    `background-color` sets the background of the header to a dark charcoal gray,
    providing a strong visual contrast to the main content.
    */
    color: #F8F8F8; /* Text color for header elements */
    /*
    Sets the default text color within the header to a very light gray for contrast.
    */
    padding: 1rem 2rem;
    /*
    `padding` creates space between the content of the header and its edges.
    `1rem` (16px, assuming default 16px font size) for top/bottom, `2rem` (32px) for left/right.
    `rem` units are relative to the root font size, making scaling easier.
    */
    display: flex;
    /*
    `display: flex;` turns the header into a flex container, allowing its direct children
    (branding and navigation) to be easily arranged.
    */
    justify-content: space-between;
    /*
    `justify-content: space-between;` distributes space between flex items.
    It pushes the branding to the left and the navigation to the right,
    creating a balanced layout.
    */
    align-items: center;
    /*
    `align-items: center;` vertically aligns flex items in the center of the cross-axis.
    This ensures the branding and navigation are perfectly centered vertically within the header.
    */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    /*
    `box-shadow` adds a subtle shadow beneath the header, giving it a lifted,
    three-dimensional appearance and making it stand out from the content below.
    - `0 2px 5px`: horizontal-offset, vertical-offset, blur-radius.
    - `rgba(0, 0, 0, 0.2)`: black color with 20% opacity.
    */
    z-index: 1000;
    /*
    `z-index` controls the stacking order of positioned elements.
    A high value (1000) ensures the header always appears on top of other content
    when scrolling, preventing content from overlapping it.
    */
}

/* Branding Styles */
.branding h1 {
    /*
    Targets the <h1> element within the `.branding` div.
    */
    margin: 0;
    /*
    Removes default margin from the heading, allowing it to align cleanly within the flex container.
    */
    font-size: 1.8rem;
    /*
    Sets the font size for the branding text.
    */
    color: #FF7F50; /* Accent Color: Coral */
    /*
    Sets the color of the branding text to coral, making it pop and serving as a key accent.
    */
}

/* Main Navigation Styles */
.main-nav .nav-list {
    /*
    Targets the unordered list (`ul`) within the `.main-nav` element.
    */
    list-style: none;
    /*
    `list-style: none;` removes the default bullet points from the list items.
    */
    margin: 0;
    /*
    Removes default margin from the list.
    */
    padding: 0;
    /*
    Removes default padding from the list.
    */
    display: flex;
    /*
    Uses flexbox to arrange the navigation items horizontally.
    */
}

.main-nav .nav-item {
    /*
    Targets each list item (`li`) within the `.nav-list`.
    */
    margin-left: 1.5rem;
    /*
    Adds space between navigation items. `1.5rem` (24px) creates a good visual separation.
    */
    position: relative; /* Essential for positioning dropdown menu */
    /*
    `position: relative;` is crucial for the dropdown menu. It makes this `li` element
    the positioning context for its absolute-positioned child (the dropdown menu).
    This means the dropdown will be positioned relative to this `li` item.
    */
}

.main-nav .nav-item a {
    /*
    Targets the anchor (`a`) tags within each navigation list item.
    */
    color: #F8F8F8; /* Light text color for links */
    /*
    Sets the color of the navigation links to very light gray for contrast against the dark header.
    */
    text-decoration: none;
    /*
    `text-decoration: none;` removes the default underline from hyperlinks.
    */
    padding: 0.5rem 0.8rem;
    /*
    Adds padding around the link text, making the clickable area larger and easier to interact with.
    */
    transition: color 0.3s ease;
    /*
    `transition` creates a smooth animation effect when the `color` property changes.
    - `color`: The property to animate.
    - `0.3s`: The duration of the animation (0.3 seconds).
    - `ease`: The timing function (starts slow, speeds up, ends slow).
    */
}

.main-nav .nav-item a:hover {
    /*
    Targets the anchor (`a`) tags when the mouse cursor hovers over them.
    */
    color: #FF7F50; /* Accent Color: Coral on hover */
    /*
    Changes the link color to coral when hovered, providing visual feedback to the user.
    */
}

/* Dropdown Menu Styles */
.dropdown-menu {
    /*
    Targets the unordered list (`ul`) that represents the dropdown menu.
    */
    display: none; /* Hidden by default */
    /*
    `display: none;` makes the dropdown menu invisible by default. It will be shown on hover.
    */
    position: absolute;
    /*
    `position: absolute;` is critical for the dropdown. It positions the dropdown
    relative to its closest positioned ancestor (which is `.nav-item` with `position: relative`).
    This allows the dropdown to float above other content without affecting the layout.
    */
    top: 100%; /* Position below the parent nav item */
    /*
    `top: 100%;` positions the top edge of the dropdown menu exactly at the bottom edge
    of its parent `.nav-item`.
    */
    left: 0;
    /*
    `left: 0;` aligns the left edge of the dropdown menu with the left edge of its parent.
    */
    background-color: #444444; /* Dropdown Background: Slightly lighter dark gray */
    /*
    Sets the background color of the dropdown menu.
    */
    min-width: 160px;
    /*
    `min-width` ensures the dropdown menu is wide enough to contain its text, preventing wrapping.
    */
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
    /*
    Adds a stronger shadow to the dropdown, making it appear more prominent and distinct.
    */
    z-index: 1001; /* Higher than header to ensure it's on top */
    /*
    `z-index: 1001;` ensures the dropdown menu appears above the main header itself,
    as well as any other content, preventing clipping issues.
    */
    list-style: none; /* Remove bullets */
    padding: 0;
    margin: 0;
    border-radius: 5px; /* Rounded corners for aesthetics */
    /*
    `border-radius` adds slight rounded corners to the dropdown box for a softer look.
    */
    overflow: visible; /* Crucial: Ensures dropdown is NOT clipped */
    /*
    `overflow: visible;` is absolutely critical for preventing the dropdown from being clipped.
    If any parent container (including the header or nav) had `overflow: hidden` or `overflow: auto`,
    any content that extends beyond its bounds would be cut off. By ensuring `visible` here,
    and by not setting `hidden` on parents, the dropdown will render fully.
    */
}

.dropdown-menu li {
    /*
    Targets each list item (`li`) within the dropdown menu.
    */
    border-bottom: 1px solid #555555; /* Separator between items */
    /*
    Adds a subtle border at the bottom of each dropdown item to visually separate them.
    */
}

.dropdown-menu li:last-child {
    /*
    Targets the last list item in the dropdown menu.
    */
    border-bottom: none; /* Remove border from the last item for a cleaner look */
}

.dropdown-menu li a {
    /*
    Targets the anchor (`a`) tags within the dropdown menu list items.
    */
    color: #F8F8F8; /* Light text color for dropdown links */
    padding: 12px 16px;
    /*
    Adds padding to dropdown links, making them easier to click and giving them more space.
    */
    text-decoration: none;
    display: block; /* Makes the entire padding area clickable */
    /*
    `display: block;` makes the anchor tag take up the full width of its parent list item,
    ensuring the entire area is clickable, not just the text.
    */
    text-align: left; /* Align text to the left */
    transition: background-color 0.3s ease, color 0.3s ease;
    /*
    Adds smooth transitions for background color and text color changes on hover.
    */
}

.dropdown-menu li a:hover {
    /*
    Targets dropdown links when hovered.
    */
    background-color: #555555; /* Darker background on hover */
    /*
    Changes the background color of the dropdown link on hover for visual feedback.
    */
    color: #FF9966; /* Lighter coral text on hover */
    /*
    Changes the text color of the dropdown link on hover.
    */
}

/* Show the dropdown menu on hover */
.nav-item.dropdown:hover .dropdown-menu {
    /*
    This rule targets the `.dropdown-menu` only when its parent `.nav-item` (which also has the `.dropdown` class)
    is hovered over.
    */
    display: block;
    /*
    Changes `display` from `none` to `block`, making the dropdown menu visible.
    */
}

/* Main Content Section Styles */
main {
    /*
    The `main` selector targets the main content area of the page.
    */
    padding-top: 80px; /* Offset for fixed header */
    /*
    `padding-top` is essential for fixed headers. Since the header is taken out of the normal
    document flow (`position: fixed`), the content below it would normally start directly
    underneath the top of the viewport and be hidden by the header.
    This padding pushes the main content down, creating space for the fixed header.
    The value (80px) should be slightly more than the header's height to prevent content
    from being obscured.
    */
}

.content-section {
    /*
    The `.content-section` class applies common styles to all content sections.
    */
    min-height: 100vh;
    /*
    `min-height: 100vh;` sets the minimum height of each section to 100% of the viewport height (`vh`).
    This ensures that each section fills at least the entire screen, making scrolling evident
    and demonstrating the sticky header behavior effectively.
    */
    display: flex;
    /*
    Uses flexbox to center content within each section.
    */
    align-items: center;
    /*
    Vertically centers content within the flex container.
    */
    justify-content: center;
    /*
    Horizontally centers content within the flex container.
    */
    text-align: center;
    /*
    Centers the text within the content wrapper.
    */
    padding: 2rem;
    /*
    Adds padding around the content within each section.
    */
    border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Subtle separator */
    /*
    Adds a subtle bottom border to visually separate sections.
    */
}

.content-section:last-of-type {
    /*
    Targets the last element with the `.content-section` class.
    */
    border-bottom: none; /* Remove border from the very last section */
}

.content-wrapper {
    /*
    The `.content-wrapper` class is used inside each section to constrain the width
    of the text content, improving readability.
    */
    max-width: 800px;
    /*
    `max-width` limits the width of the content, preventing lines of text from becoming
    too long and hard to read on very wide screens.
    */
    margin: 0 auto;
    /*
    `margin: 0 auto;` horizontally centers the content wrapper within its parent
    (the flex container `.content-section`). `0` for top/bottom margin, `auto` for left/right.
    */
}

.content-section h2 {
    /*
    Targets the <h2> headings within content sections.
    */
    font-size: 2.5rem;
    /*
    Sets a larger font size for section headings.
    */
    margin-bottom: 1rem;
    /*
    Adds space below the heading.
    */
    color: #FF7F50; /* Accent Color: Coral for headings */
    /*
    Uses the coral accent color for section headings to make them stand out.
    */
}

.content-section p {
    /*
    Targets paragraph text within content sections.
    */
    font-size: 1.1rem;
    /*
    Slightly increases font size for paragraphs for better readability.
    */
    margin-bottom: 1rem;
    /*
    Adds space below paragraphs.
    */
    max-width: 700px; /* Further constrain paragraph width */
    margin-left: auto;
    margin-right: auto;
}

/* Individual Section Background Colors for Visual Distinction */
.section-1 {
    background-color: #F0F0F0; /* Light gray */
}

.section-2 {
    background-color: #E8E8E8; /* Slightly darker light gray */
}

.section-3 {
    background-color: #E0E0E0; /* Even darker light gray */
}

.section-4 {
    background-color: #F0F0F0; /* Reusing colors for variety */
}

.section-5 {
    background-color: #E8E8E8;
}

.section-6 {
    background-color: #E0E0E0;
}

.final-section {
    background-color: #F0F0F0;
    min-height: 50vh; /* Smaller height for the final section */
}

/* Responsive Adjustments (Optional but good practice) */
@media (max-width: 768px) {
    /*
    `@media (max-width: 768px)` is a media query. Styles inside this block
    will only apply when the viewport width is 768 pixels or less (typical for tablets and mobile).
    This is for making the design responsive.
    */
    .main-header {
        flex-direction: column; /* Stack branding and nav vertically */
        /*
        Changes the flex direction to column, stacking the branding and navigation
        on top of each other for smaller screens.
        */
        padding: 1rem; /* Reduce padding */
        /*
        Reduces padding for a more compact header on smaller screens.
        */
    }

    .branding {
        margin-bottom: 0.5rem; /* Add space below branding */
        /*
        Adds a small margin below the branding when stacked.
        */
    }

    .main-nav .nav-list {
        flex-direction: column; /* Stack nav items vertically */
        /*
        Stacks the navigation items vertically within the navigation menu.
        */
        text-align: center; /* Center align text */
        /*
        Centers the text of the navigation items.
        */
        width: 100%; /* Make nav list full width */
        /*
        Ensures the navigation list takes up the full width available.
        */
    }

    .main-nav .nav-item {
        margin: 0.5rem 0; /* Adjust margins for vertical stacking */
        /*
        Adjusts margins for vertical stacking, adding space above and below each item.
        */
    }

    .dropdown-menu {
        left: 50%; /* Center dropdown horizontally */
        transform: translateX(-50%); /* Adjust for centering */
        /*
        `left: 50%;` and `transform: translateX(-50%);` together horizontally center
        the dropdown menu relative to its parent item, which is useful when the
        parent item is also centered.
        */
    }

    .content-section h2 {
        font-size: 2rem; /* Reduce heading size */
    }

    .content-section p {
        font-size: 1rem; /* Reduce paragraph size */
    }
}
